#BlueJ class context
comment0.target=Web
comment0.text=\r\n\ Create\ the\ web.\r\n\ \r\n\ @author\ Daniel\ Diaz\ &&\ Miguel\ Motta\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=strands\ radio\ isVisible
comment1.target=Web(int,\ int,\ boolean)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Web\r\n
comment10.params=strand
comment10.target=void\ addSpot(int)
comment10.text=\r\n\ Add\ a\ spot\ to\ the\ web\ with\ a\ random\ color\r\n\ \r\n\ @param\ strand\ where\ the\ spot\ is\ locate\r\n
comment11.params=color
comment11.target=void\ delSpot(java.lang.String)
comment11.text=\r\n\ Remove\ a\ spot\ from\ the\ web\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ spot\r\n
comment12.params=strand
comment12.target=void\ spiderSit(int)
comment12.text=\r\n\ Seat\ the\ spider\ in\ the\ center\ with\ reference\ to\ a\ specific\ strand\r\n\ \r\n\ @param\ strand\ the\ strand\ to\ wich\ the\ spider\ will\ refer\r\n
comment13.params=
comment13.target=void\ spiderWalk()
comment13.text=\r\n\ The\ spider\ walks\ through\ the\ strands\ and\ bridges\r\n
comment14.params=
comment14.target=int[]\ spiderLastPath()
comment14.text=\r\n\ Return\ the\ path\ along\ wich\ the\ spider\ walked\r\n\ \r\n\ @return\ the\ strands\ where\ the\ spider\ walked\r\n
comment15.params=
comment15.target=java.lang.String[]\ bridges()
comment15.text=\r\n\ Return\ the\ existing\ bridges\ in\ the\ web\r\n\ \r\n\ @return\ the\ colors\ of\ the\ bridges\ in\ the\ web\r\n
comment16.params=color
comment16.target=double[]\ bridge(java.lang.String)
comment16.text=\r\n\ Return\ the\ coordenates\ of\ the\ bridge,\ (Xo,Yo)\ &\ (Xf,Yf)\r\n\ \r\n\ @param\ color\ the\ color\ of\ the\ bridge.\ Valid\ colors\ are\ "red",\ "black",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "blue",\ "yellow",\ "green",\ "magenta",\ "gray",\ "orange",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "purple",\ "brown",\ "cyan",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "darkgreen",\ "aquamarine",\ "lavender"\ and\ "salmon"\r\n\ @return\ the\ coordenates\ of\ the\ bridge\r\n
comment17.params=
comment17.target=java.lang.String[]\ spots()
comment17.text=\r\n\ Return\ the\ existing\ spots\ in\ the\ web\r\n\ \r\n\ @return\ the\ colors\ of\ the\ spots\ in\ the\ web\r\n
comment18.params=color
comment18.target=double[]\ spot(java.lang.String)
comment18.text=\r\n\ Return\ the\ coordenates\ of\ the\ apot,\ (Xo,Yo)\ &\ (Xf,Yf)\r\n\ \r\n\ @param\ color\ the\ color\ of\ the\ spot.\ Valid\ colors\ are\ "red",\ "black",\ "blue",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "yellow",\ "green",\ "magenta",\ "gray",\ "orange",\ "purple",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "brown",\ "cyan",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ "darkgreen",\ "aquamarine",\ "lavender"\ and\ "salmon"\r\n\ @return\ the\ coordenates\ of\ the\ spot\r\n
comment19.params=
comment19.target=java.lang.String[]\ reachableSpots()
comment19.text=\r\n\ Return\ the\ spots\ that\ the\ spider\ can\ reach\r\n\ \r\n\ @return\ the\ spots\ color\ that\ the\ spider\ can\ reach\r\n
comment2.params=strands\ radio\ isVisible
comment2.target=Web\ getWeb(int,\ int,\ boolean)
comment2.text=\r\n\ Factory\ method\ to\ get\ the\ web\ singleton\ object.\r\n\ \r\n\ @param\ strands\ \ \ the\ number\ of\ strands\ in\ the\ web\r\n\ @param\ radio\ \ \ \ \ the\ radio\ of\ the\ web\r\n\ @param\ isVisible\ the\ visibility\ of\ the\ web\r\n\ @return\ the\ web\ as\ singleton\ object\r\n
comment20.params=
comment20.target=java.lang.String[]\ unusedBridges()
comment20.text=\r\n\ Return\ the\ bridges\ that\ the\ spider\ didn't\ use\r\n\ \r\n\ @return\ the\ bridges\ color\ that\ the\ spider\ didn't\ use\r\n
comment21.params=
comment21.target=void\ makeVisible()
comment21.text=\r\n\ Make\ the\ objects\ visible.\ If\ it\ was\ already\ visible,\ do\ nothing.\r\n
comment22.params=
comment22.target=void\ makeInvisible()
comment22.text=\r\n\ Make\ the\ objects\ invisible.\ If\ it\ was\ already\ visible,\ do\ nothing.\r\n
comment23.params=
comment23.target=boolean\ ok()
comment23.text=\r\n\ Return\ the\ status\ of\ the\ simulation\r\n\ \r\n\ @return\ TRUE,\ if\ an\ action\ could\ be\ completed.\ FALSE,\ otherwise\r\n
comment24.params=
comment24.target=Spot\ spiderInspot()
comment24.text=\r\n\ Verify\ if\ the\ spider\ is\ sitting\ on\ a\ spot\r\n\ \r\n\ @return\ the\ spot\ where\ the\ spider\ is\r\n
comment25.params=
comment25.target=void\ spiderJump()
comment25.text=\r\n\ The\ spider\ jump\ to\ the\ next\ strand\r\n
comment26.params=
comment26.target=void\ spiderKill()
comment26.text=\r\n\ The\ spider\ dies\r\n
comment27.params=strand
comment27.target=boolean\ spotInStrand(int)
comment27.text=\r\n\ Verify\ if\ there\ is\ a\ spot\ in\ the\ strand\r\n\ \r\n\ @param\ strand\ the\ strand\ to\ verify\r\n\ @return\ TRUE,\ there\ is\ a\ spot\ in\ the\ strand.\ FALSE,\ otherwise\r\n
comment28.params=color
comment28.target=void\ removeBridge(java.lang.String)
comment28.text=\r\n\ Delete\ a\ bridge\ form\ the\ arrayList\r\n\ \r\n\ @param\ color\r\n
comment29.params=color
comment29.target=void\ removeSpot(java.lang.String)
comment29.text=\r\n\ Delete\ a\ spot\ form\ the\ arrayList\r\n\ \r\n\ @param\ color\r\n
comment3.params=
comment3.target=void\ addOneStrand()
comment3.text=\r\n\ Add\ an\ strand\ to\ the\ web\ and\ update\ the\ relation\ of\ spots\ and\ bridges\ with\r\n\ their\ respective\ strands.\r\n
comment30.params=
comment30.target=java.util.HashMap\ getStrands()
comment30.text=\r\n\ Return\ the\ existing\ strands\ in\ the\ web\r\n\ \r\n\ @return\ a\ hashMap\ with\ the\ existing\ strands\ in\ the\ web\r\n
comment31.params=
comment31.target=java.util.HashMap\ getBridges()
comment31.text=\r\n\ Return\ the\ existing\ bridges\ in\ the\ web\r\n\ \r\n\ @return\ a\ hashMap\ with\ the\ existing\ bridges\ in\ the\ web\r\n
comment32.params=
comment32.target=java.util.HashMap\ getSpots()
comment32.text=\r\n\ Return\ the\ existing\ spots\ in\ the\ web\r\n\ \r\n\ @return\ a\ hashMap\ with\ the\ existing\ spots\ in\ the\ web\r\n
comment33.params=
comment33.target=int\ getNumStrands()
comment33.text=\r\n\ Returns\ the\ numbre\ of\ strands\r\n\ \r\n\ @return\ the\ number\ of\ strands\ on\ the\ web\r\n
comment34.params=
comment34.target=int\ getRadio()
comment34.text=\r\n\ Returns\ the\ value\ of\ the\ radio,\ the\ length.\r\n\ \r\n\ @return\ the\ radio\ of\ the\ web\r\n
comment35.params=ok
comment35.target=void\ setOk(boolean)
comment35.text=\r\n\ Change\ the\ status\ of\ the\ web\r\n\ \r\n\ @param\ ok\ the\ new\ status\ of\ the\ web\r\n
comment36.params=
comment36.target=void\ addStrands()
comment36.text=\r\n\ Create\ all\ the\ strands\ of\ the\ web\r\n
comment37.params=
comment37.target=void\ recalculateWeb()
comment37.text=\r\n\ Recreates\ the\ web\ according\ to\ the\ new\ specifications.\r\n
comment38.params=distance\ firstStrand\ finalStrand
comment38.target=boolean\ contiguosBridges(int,\ int,\ int)
comment38.text=\r\n\ Verify\ if\ exists\ contiguos\ bridges.\r\n
comment39.params=type\ color\ distance\ firstStrand\ finalStrand
comment39.target=Bridge\ createBridge(java.lang.String,\ java.lang.String,\ int,\ int,\ int)
comment39.text=\r\n\ Create\ a\ type\ of\ bridge\r\n
comment4.params=percentage
comment4.target=void\ enlarge(int)
comment4.text=\r\n\ Expand\ the\ web\ by\ a\ given\ percentage.\r\n\ \r\n\ @param\ percentage,\ the\ expansion\ relation\r\n
comment40.params=type\ color\ strand\ selectedStrand
comment40.target=Spot\ createSpot(java.lang.String,\ java.lang.String,\ int,\ Strand)
comment40.text=\r\n\ Create\ a\ type\ of\ spot\r\n
comment5.params=type\ color\ distance\ firstStrand
comment5.target=void\ addBridge(java.lang.String,\ java.lang.String,\ int,\ int)
comment5.text=\r\n\ Add\ a\ bridge\ to\ the\ web\r\n\ \r\n\ @param\ type\ \ \ \ \ \ \ \ the\ type\ of\ the\ bridge.\ Valid\ tipes\ are\ "normal",\ "fixed",\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "transformer",\ "weak"\ and\ "mobile"\r\n\ @param\ color\ \ \ \ \ \ \ The\ color\ of\ the\ bridge\r\n\ @param\ distance\ \ \ \ the\ distance\ from\ the\ center\ to\ the\ bridge\r\n\ @param\ firstStrand\ the\ strand\ where\ the\ bridge\ begin\r\n
comment6.params=distance\ firstStrand
comment6.target=void\ addBridge(int,\ int)
comment6.text=\r\n\ Add\ a\ bridge\ to\ the\ web\ with\ a\ random\ color\r\n\ \r\n\ @param\ distance\ \ \ \ the\ distance\ from\ the\ center\ to\ the\ bridge\r\n\ @param\ firstStrand\ the\ strand\ where\ the\ bridge\ begin\r\n
comment7.params=color\ distance
comment7.target=void\ relocateBridge(java.lang.String,\ int)
comment7.text=\r\n\ Change\ the\ distance\ of\ the\ bridge\r\n\ \r\n\ @param\ color\ \ \ \ The\ color\ of\ the\ bridge\r\n\ @param\ distance\ the\ new\ distance\ from\ the\ center\ to\ the\ bridge\r\n
comment8.params=color
comment8.target=void\ delBridge(java.lang.String)
comment8.text=\r\n\ Remove\ a\ bridge\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ bridge\r\n
comment9.params=type\ color\ strand
comment9.target=void\ addSpot(java.lang.String,\ java.lang.String,\ int)
comment9.text=\r\n\ Add\ a\ spot\ to\ the\ web.\r\n\ \r\n\ @param\ type\ \ \ the\ type\ of\ the\ spot.\ Valid\ tipes\ are\ "killer"\ and\ "bouncy"\r\n\ @param\ color\ \ The\ color\ of\ the\ spot\r\n\ @param\ strand\ where\ the\ spot\ is\ locate\r\n
numComments=41
